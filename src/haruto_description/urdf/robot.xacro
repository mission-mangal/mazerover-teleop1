<?xml version="1.0"?>
<robot name="robot" xmlns:xacro="http://wiki.ros.org/xacro">

  <xacro:arg name="robot_type" default="omni"/>

  <xacro:property name="type" value="$(arg robot_type)" />

  <xacro:include filename="$(find haruto_description)/urdf/base.xacro"/>
  <xacro:include filename="$(find haruto_description)/urdf/pillar.xacro"/>
  <xacro:include filename="$(find haruto_description)/urdf/motor.xacro"/>
  <xacro:include filename="$(find haruto_description)/urdf/camera.xacro"/>
  <xacro:include filename="$(find haruto_description)/urdf/wheel.xacro"/>

  <link name="world_link" />

  <xacro:robot_base parent="world_link" child="first_base_link" xyz="0 0 0.075" rpy="0 0 0" />
  <xacro:robot_base parent="first_base_link" child="second_base_link" xyz="0 0 0.06" rpy="0 0 0" />
  <xacro:robot_base parent="second_base_link" child="third_base_link" xyz="0 0 0.06" rpy="0 0 0" />

  <xacro:robot_pillar parent="first_base_link" child="first_front_left_pillar_link" xyz="0.11 0.065 0.03" rpy="0 0 0" />
  <xacro:robot_pillar parent="first_base_link" child="first_front_right_pillar_link" xyz="0.11 -0.065 0.03" rpy="0 0 0" />
  <xacro:robot_pillar parent="first_base_link" child="first_back_left_pillar_link" xyz="-0.11 0.065 0.03" rpy="0 0 0" />
  <xacro:robot_pillar parent="first_base_link" child="first_back_right_pillar_link" xyz="-0.11 -0.065 0.03" rpy="0 0 0" />

  <xacro:robot_pillar parent="second_base_link" child="second_front_left_pillar_link" xyz="0.11 0.065 0.03" rpy="0 0 0" />
  <xacro:robot_pillar parent="second_base_link" child="second_front_right_pillar_link" xyz="0.11 -0.065 0.03" rpy="0 0 0" />
  <xacro:robot_pillar parent="second_base_link" child="second_back_left_pillar_link" xyz="-0.11 0.065 0.03" rpy="0 0 0" />
  <xacro:robot_pillar parent="second_base_link" child="second_back_right_pillar_link" xyz="-0.11 -0.065 0.03" rpy="0 0 0" />

  <xacro:robot_motor parent="first_base_link" child="front_left_motor_link" xyz="0.10 0.040 -0.025" rpy="0 0 0" />
  <xacro:robot_motor parent="first_base_link" child="front_right_motor_link" xyz="0.10 -0.040 -0.025" rpy="0 0 0" />
  <xacro:robot_motor parent="first_base_link" child="back_left_motor_link" xyz="-0.10 0.040 -0.025" rpy="0 0 0" />
  <xacro:robot_motor parent="first_base_link" child="back_right_motor_link" xyz="-0.10 -0.040 -0.025" rpy="0 0 0" />

  <xacro:wheel parent="front_left_motor_link" child="front_left_wheel_link" xyz="0.0 0.060 -0.015" rpy="1.57 0 0" robot_type="$(arg robot_type)" />
  <xacro:wheel parent="front_right_motor_link" child="front_right_wheel_link" xyz="0.0 -0.060 -0.015" rpy="1.57 0 0" robot_type="$(arg robot_type)" />
  <xacro:wheel parent="back_left_motor_link" child="back_left_wheel_link" xyz="0.0 0.060 -0.015" rpy="1.57 0 0" robot_type="$(arg robot_type)" />
  <xacro:wheel parent="back_right_motor_link" child="back_right_wheel_link" xyz="0.0 -0.060 -0.015" rpy="1.57 0 0" robot_type="$(arg robot_type)" />

  <xacro:camera parent="third_base_link" child="camera_link" xyz="0.04 0.0 0.035" rpy="0 0 0" />

  <xacro:if value="${type == 'omni'}">
    <gazebo>
      <plugin name="object_controller" filename="libgazebo_ros_planar_move.so">
        <ros>
          <argument>odom:=odom/unfiltered</argument>
        </ros>
        <command_topic>cmd_vel</command_topic>
        <odometry_topic>odom/unfiltered</odometry_topic>
        <odometry_frame>odom</odometry_frame>
        <odometry_rate>20.0</odometry_rate>
        <robot_base_frame>world_link</robot_base_frame>
        <publish_odom>true</publish_odom>
        <publish_odom_tf>true</publish_odom_tf>
      </plugin>
    </gazebo>
  </xacro:if>

  <xacro:if value="${type == 'diff'}">
   <gazebo>
      <plugin name="skid_steer_drive" filename="libgazebo_ros_diff_drive.so">

         <num_wheel_pairs>2</num_wheel_pairs>
         
        <left_joint>front_left_motor_link_to_front_left_wheel_link_joint</left_joint>
        <right_joint>front_right_motor_link_to_front_right_wheel_link_joint</right_joint>
        <left_joint>back_left_motor_link_to_back_left_wheel_link_joint</left_joint>
        <right_joint>back_right_motor_link_to_back_right_wheel_link_joint</right_joint>

        <wheel_separation>0.215</wheel_separation>
        <wheel_separation>0.215</wheel_separation>

        <wheel_diameter>0.035</wheel_diameter>
        <wheel_diameter>0.035</wheel_diameter>

        <max_wheel_torque>50</max_wheel_torque>
        <max_wheel_acceleration>10.0</max_wheel_acceleration>

        <odometry_frame>odom</odometry_frame>
        <robot_base_frame>world_link</robot_base_frame>

        <publish_odom>true</publish_odom> 
        <publish_odom_tf>true</publish_odom_tf> 
        <publish_wheel_tf>true</publish_wheel_tf> 
      </plugin>
     </gazebo>
  </xacro:if>

  <gazebo reference="camera_link">
    <sensor type="camera" name="camera1">
      <update_rate>30.0</update_rate>
      <camera name="head">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>800</width>
          <height>800</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>rrbot/camera1</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>camera_link</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>

</robot>
